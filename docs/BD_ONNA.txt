
-- Inserções iniciais

create database ONNA;
use ONNA;

-- ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'U1de8JA87Rrb';

-- use test;
-- drop database ONNA;


-- Tabela central

create table tblTipo_Usuario(
idTipo_Usuario int primary key auto_increment,
status_Ban tinyint default 0,
email varchar(120) unique not null,
senha varchar(120) not null,	
nome varchar(100) not null,
dataNasc date not null,
avatar int not null, -- Serão imagens pré-selecionadas por nossa equipe, depositadas na pasta do aplicativo web/mobile
tipo_Usuario tinyint not null, -- Valor [0] será perfil pessoal; valor [1] será perfil profissional
data_Cadastro date not null -- Dia em que o usuário cadastrou sua conta
);


-- Funcionalidade de chat privado

create table tblContato(
idContato int primary key auto_increment,

idTipo_Usuario int unique not null,
constraint fkTipo_Usuario_tblContato foreign key (idTipo_Usuario) references tblTipo_Usuario (idTipo_Usuario)
);

create table tblColecao_Contato(
idColecao_Contato int primary key auto_increment,

idTipo_Usuario int not null,
constraint fkTipo_Usuario_tblColecao_Contato foreign key (idTipo_Usuario) references tblTipo_Usuario (idTipo_Usuario),

idContato int not null,
constraint fkContato_tblColecao_Contato foreign key (idContato) references tblContato (idContato)   
);

create table tblConversa_Privada(
idConversa_Privada int primary key auto_increment,
mensagem varchar(4000) not null,
data_Mensagem date not null, -- now()
hora time not null, -- now()

idTipo_Usuario int not null,
constraint fkTipo_Usuario_tblConversa_Privada foreign key (idTipo_Usuario) references tblTipo_Usuario (idTipo_Usuario),

idContato int not null,
constraint fkContato_tblConversa_Privada foreign key (idContato) references tblContato (idContato) 
);


-- Funcionalidades do mobile "Perfil Pessoal"

create table tblPerfil_Pessoal(
idUsuario int primary key,

idTipo_Usuario int unique not null,
constraint fkTipo_Usuario_tblPerfil_Pessoal foreign key (idTipo_Usuario) references tblTipo_Usuario (idTipo_Usuario)
); -- INSERT FEITO

create table tblNotificacao(
idNotificacao int primary key auto_increment,
titulo varchar(50) not null,
mensagem varchar(255),
data_Notificacao date not null,
hora time not null,

idUsuario int not null,
constraint fkPerfil_Pessoal_tblNotificacao foreign key (idUsuario) references tblPerfil_Pessoal (idUsuario)
);

create table tblCalendario_Personalizado(
idCalendario int primary key auto_increment,
dia_Marcado date not null,
periodo int default 7 not null,

idUsuario int unique not null,
constraint fkPerfil_Pessoal_tblCalendario_Personalizado foreign key (idUsuario) references tblPerfil_Pessoal (idUsuario)
);

create table tblRelatorio_Humor(
idRelatorio_Humor int primary key auto_increment,
humor tinyint not null,
sintoma tinyint not null,
secrecao_Vaginal tinyint not null,
data_Relatorio date not null, -- now()

idUsuario int not null,
constraint fkPerfil_Pessoal_tblRelatorio_Humor foreign key (idUsuario) references tblPerfil_Pessoal (idUsuario)
);

create table tblRelatorio_Remedio(
idRelatorio_Remedio int primary key auto_increment,
remedio tinyint not null,
intervalo_Hora tinyint not null,
qntd_Agua tinyint not null,
data_Relatorio date not null, -- now()

idUsuario int not null,
constraint fkPerfil_Pessoal_tblRelatorio_Remedio foreign key (idUsuario) references tblPerfil_Pessoal (idUsuario)
);

create table tblRelatorio_Atividade(
idRelatorio_Remedio int primary key auto_increment,
atividade_Fisica tinyint not null,
atividade_Feita tinyint not null,
apos_Atividade tinyint not null,
data_Relatorio date not null, -- now()

idUsuario int not null,
constraint fkPerfil_Pessoal_tblRelatorio_Atividade foreign key (idUsuario) references tblPerfil_Pessoal (idUsuario)
);



-- Funcionalidades do mobile "Perfil Profissional"

create table tblPerfil_Profissional(
idProfissional int primary key,
crm int(5),
crp int(5),
uf char(2) not null,
area_Formacao varchar(80) not null,

idTipo_Usuario int not null,
constraint fkTipo_Usuario_tblPerfil_Profissional foreign key (idTipo_Usuario) references tblTipo_Usuario (idTipo_Usuario)
);

create table tblDisponibilidade(
idDisponibilidade int primary key auto_increment,
data_Disponibilidade date not null,
hora_Inicial time not null, -- Início do intervalo de disponibilidade para chat
hora_Final time not null, -- Fim do intervalo de disponibilidade para chat,

idProfissional int not null,
constraint fkPerfil_Profissional_tblDisponibilidade foreign key (idProfissional) references tblPerfil_Profissional (idProfissional)
);


-- Funcionalidades do website

create table tblForum(
idForum int primary key auto_increment,
nome varchar(80) unique not null,
descricao varchar(500)
);

create table tblPostagem(
idPostagem int primary key auto_increment,
status_Ban tinyint default 0,
titulo varchar(300) not null,
subtitulo varchar(4000),
imagem longtext,
data_Postagem date not null, -- now()
hora time not null, -- now()
reacoes int default 0,

idTipo_Usuario int not null,
constraint fkTipo_Usuario_tblPostagem foreign key (idTipo_Usuario) references tblTipo_Usuario (idTipo_Usuario),

idForum int not null,
constraint fkForum_tblPostagem foreign key (idForum) references tblForum (idForum)
);

create table tblResposta_Postagem(
idResposta_Postagem int primary key auto_increment,
status_Ban tinyint default 0,
mensagem varchar(4000) not null,
data_Resposta date not null, -- now()
hora time not null, -- now()
reacoes int default 0,

idTipo_Usuario int not null,
constraint fkTipo_Usuario_tblResposta_Postagem foreign key (idTipo_Usuario) references tblTipo_Usuario (idTipo_Usuario),

idPostagem int not null,
constraint fkPostagem_tblResposta_Postagem foreign key (idPostagem) references tblPostagem (idPostagem)
);

create table tblTipo_Denuncia(
idTipo_Denuncia int primary key, -- Cada inteiro irá se referir a um dos tipos já definidos (ofensa, discriminação etc.)
tipo varchar(40) not null
);

create table tblDenuncia(
idDenuncia int primary key auto_increment,
status_Check tinyint default 0, -- Campo que receberá instância [1] quando a denúncia for resolvida no desktop 
descricao varchar(2000),
data_Denuncia date not null, -- now()
hora time not null, -- now()

idTipo_Usuario int not null,
constraint fkTipo_Usuario_tblDenuncia foreign key (idTipo_Usuario) references tblTipo_Usuario (idTipo_Usuario),

idPostagem int,
constraint fkPostagem_tblDenuncia foreign key (idPostagem) references tblPostagem (idPostagem),

idResposta_Postagem int,
constraint fkResposta_Postagem_tblDenuncia foreign key (idResposta_Postagem) references tblResposta_Postagem (idResposta_Postagem),

idTipo_Denuncia int not null,
constraint fkTipo_Denuncia_tblDenuncia foreign key (idTipo_Denuncia) references tblTipo_Denuncia (idTipo_Denuncia)
);


-- Funcionalidades Desktop

create table tblAdmin(
idAdmin int primary key auto_increment,
username varchar(120) unique not null,
senha varchar(120) not null 
);

create table tblGenero(
idGenero int primary key, -- Cada inteiro irá se referir a um dos gêneros já definidos (maternidade, gravidez etc.)
genero varchar(40) not null
);

create table tblArtigo(
idArtigo int primary key auto_increment,
titulo varchar(255) not null,
resumo varchar(3000) not null,
fonte varchar(1000) not null,
data_Publicacao date not null, -- now()

idAdmin int not null,
constraint fkAdmin_tblArtigo foreign key (idAdmin) references tblAdmin (idAdmin),

idGenero int not null,
constraint fkGenero_tblArtigo foreign key (idGenero) references tblGenero (idGenero)
);


-- Dados pré-cadastrados em nosso banco:

insert into tblGenero (idGenero, genero) values
(1, 'Menstruação'), 
(2, 'Engravidar'), 
(3, 'Gestação'), 
(4, 'Maternidade'), 
(5, 'Cuidados com o corpo');

insert into tblTipo_Denuncia (idTipo_Denuncia, tipo) values
(1, 'Abuso verbal'), -- Lingujar ofensivo, ameaças
(2, 'Discurso de ódio'), -- Racismo, sexismo, homofobia etc. 
(3, 'Nome ofensivo ou inadequado'), -- Nome de usuário indevido 
(4, 'Postagem inadequada'), -- Assuntos não relevantes à proposta da plataforma ONNA, como propaganda política, conteúdo explícito etc. 
(5, 'Spam de mensagens'); -- Excesso de postagens irrelevantes na plataforma ONNA

insert into tblForum (nome, descricao) values
('#Desabafos', 'Espaço dedicado ao acolhimento dos problemas da alma'),
('#Gravidez', 'Ambiente para sanar dúvidas e questionamentos sobre o período de gravidez'),
('#Autocuidado', 'Trocas de informações sobre a preservação do corpo feminino'),
('#Maternidade', 'Discussões sobre os devidos cuidados com nenês e seu desenvolvimento saudável');









-- Procedures Desktop

-- tblAdmin

delimiter /
create procedure cadastro_Admin (
in p_username varchar(120),
in p_senha varchar(120)
)

begin
	insert into tblAdmin (username, senha) values (p_username, p_senha);
end /
delimiter ;

delimiter /
create procedure login_Admin (
in p_username varchar(120)
)

begin
	select * from tblAdmin where username = p_username;
end /
delimiter ;


-- tblArtigo

delimiter /
create procedure criar_Artigo (
in p_titulo varchar(255), 
in p_resumo varchar(3000), 
in p_fonte varchar(1000),
in p_idAdmin int,
in p_idGenero int
)

begin
	insert into tblArtigo (titulo, resumo, fonte, data_Publicacao, idAdmin, idGenero) values (p_titulo, p_resumo, p_fonte, now(), p_idAdmin, p_idGenero);
end /
delimiter ;

delimiter /
create procedure consultar_Artigo_Titulo (
in p_titulo varchar(255)
)

begin
	select idArtigo, titulo, resumo, fonte, date_format(str_to_date(data_Publicacao, '%Y-%m-%d'), '%d/%m/%Y') as 'Data de publicação', idAdmin, idGenero from tblArtigo where titulo like concat('%', p_titulo, '%');
end /
delimiter ;


delimiter /
create procedure consulta_Artigo (
in p_idArtigo int
)

begin
	select idArtigo, titulo, resumo, fonte, date_format(str_to_date(data_Publicacao, '%Y-%m-%d'), '%d/%m/%Y') as 'Data de publicação', idAdmin, idGenero from tblArtigo where idArtigo = p_idArtigo;
end /
delimiter ;

delimiter /
create procedure excluir_Artigo (
in p_idArtigo int
)

begin
	delete from tblArtigo where idArtigo = p_idArtigo;
end /
delimiter ;

delimiter /
create procedure alterar_Artigo (
in p_idArtigo int,
in p_titulo varchar(255), 
in p_resumo varchar(3000), 
in p_fonte varchar(1000), 
in p_idGenero int
)

begin
	update tblArtigo set titulo = p_titulo, resumo = p_resumo, fonte = p_fonte, data_Publicacao = now(), idGenero = p_idGenero where idArtigo = p_idArtigo;
end /
delimiter ;


-- tblDenuncia

delimiter /
create procedure consulta_Superficial_Denuncia ()

begin
	select a.idDenuncia, a.idTipo_Usuario, a.idPostagem, a.idResposta_Postagem, date_format(str_to_date(a.data_Denuncia, '%Y-%m-%d'), '%d/%m/%Y') as 'Data da denúncia',       
	       b.email as 'Quem denunciou',   
           c.nome as 'Fórum',
           d.email as 'Quem foi denunciado' from tblDenuncia a 
       
	inner join tblTipo_Usuario b on a.idTipo_Usuario = b.idTipo_Usuario
	inner join tblPostagem e on a.idPostagem = e.idPostagem
	inner join tblForum c on e.idForum = c.idForum
	inner join tblTipo_Usuario d on d.idTipo_Usuario = e.idTipo_Usuario where a.status_Check = 0
       
	union all
       
	select a.idDenuncia, a.idTipo_Usuario, a.idPostagem, a.idResposta_Postagem, date_format(str_to_date(a.data_Denuncia, '%Y-%m-%d'), '%d/%m/%Y') as 'Data da denúncia',       
		   b.email as 'Quem denunciou',   
           c.nome as 'Fórum',
           d.email as 'Quem foi denunciado' from tblDenuncia a   
       
	inner join tblTipo_Usuario b on a.idTipo_Usuario = b.idTipo_Usuario
	inner join tblResposta_Postagem e on a.idResposta_Postagem = e.idResposta_Postagem
	inner join tblPostagem f on e.idPostagem = f.idPostagem
	inner join tblForum c on f.idForum = c.idForum
	inner join tblTipo_Usuario d on e.idTipo_Usuario = d.idTipo_Usuario where a.status_Check = 0 
	
	order by idDenuncia;
end /
delimiter ;

-- A própria aplicação desktop deverá distinguir uma [postagem] de uma [resposta de postagem], checando se o [idResposta_Postagem = null] por exemplo

delimiter /
create procedure consulta_Detalhada_Denuncia_Postagem (
in p_idDenuncia int
)

begin
	select a.descricao as 'Descrição da denúncia', a.idTipo_Denuncia,
		   b.email as 'Quem denunciou',
		   concat(c.titulo, '\n', '\n', '\n', c.subtitulo) as 'Mensagem denunciada',
		   d.email as 'Quem foi denunciado' from tblDenuncia a
               
	inner join tblTipo_Usuario b on a.idTipo_Usuario = b.idTipo_Usuario
	inner join tblPostagem c on a.idPostagem = c.idPostagem
	inner join tblTipo_Usuario d on c.idTipo_Usuario = d.idTipo_Usuario where idDenuncia = p_idDenuncia;
end /
delimiter ;

delimiter /
create procedure imagem_Postagem (
in p_idPostagem int
)

begin
	select imagem from tblPostagem where idPostagem = p_idPostagem;
end /
delimiter ;

delimiter /
create procedure consulta_Detalhada_Denuncia_Resposta (
in p_idDenuncia int
)

begin
	select a.descricao as 'Descrição da denúncia', a.idTipo_Denuncia,
		   b.email as 'Quem denunciou',
		   c.mensagem as 'Mensagem denunciada',
		   d.email as 'Quem foi denunciado' from tblDenuncia a
               
	inner join tblTipo_Usuario b on a.idTipo_Usuario = b.idTipo_Usuario
	inner join tblResposta_Postagem c on a.idResposta_Postagem = c.idResposta_Postagem
	inner join tblTipo_Usuario d on c.idTipo_Usuario = d.idTipo_Usuario where idDenuncia = p_idDenuncia;
end /
delimiter ;

-- Nas consultas detalhadas, deve-se guardar o [email] da pessoa denunciada para a execução da procedure a seguir:

delimiter /
create procedure banir_Usuario (
in p_email_Denunciado varchar(120)
)

begin
	update tblTipo_Usuario set status_Ban = 1 where email = p_email_Denunciado;
end /
delimiter ;

delimiter /
create procedure apagar_Postagem (
in p_idPostagem int
)

begin
	update tblPostagem set status_Ban = 1 where idPostagem = p_idPostagem;	
end /
delimiter ;

delimiter /
create procedure apagar_Resposta (
in p_idResposta_Postagem int
)

begin
	update tblResposta_Postagem set status_Ban = 1 where idResposta_Postagem = p_idResposta_Postagem;	
end /
delimiter ;

delimiter /
create procedure ignorar_Denuncia (
in p_idDenuncia int
)

begin
	update tblDenuncia set status_Check = 1 where idDenuncia = p_idDenuncia;
end /
delimiter ;









-- Procedures do usuário

-- Apenas após todas as validações de preenchimento de campo por parte da aplicação web/mobile que se registrará todos os dados de cadastro no banco (simultaneamente)

delimiter /
create procedure cadastro_Tipo_Usuario (
in p_email varchar(120),
in p_senha varchar(120),
in p_nome varchar(100),
in p_dataNasc date,
in p_avatar int,
in p_tipo_Usuario tinyint
)

begin
	insert into tblTipo_Usuario (email, senha, nome, dataNasc, avatar, tipo_Usuario, data_Cadastro) values (p_email, p_senha, p_nome, p_dataNasc, p_avatar, p_tipo_Usuario, now());
end /
delimiter ;

-- Cadastros especificos para cada tipo de usuário. Devem ser realizados logo após o cadastro da [tblTipo_Usuario]

delimiter /
create procedure cadastro_Perfil_Pessoal (
in p_idUsuario int,
in p_idTipo_Usuario int
)

begin
	insert into tblPerfil_Pessoal (idUsuario, idTipo_Usuario) values (p_idUsuario, p_idTipo_Usuario);
end /
delimiter ;

delimiter /
create procedure cadastro_Perfil_Profissional (
in p_idProfissional int,
in p_crm int(5),
in p_crp int(5),
in p_uf char(2),
in p_area_Formacao varchar(80),
in p_idTipo_Usuario int
)

begin
	insert into tblPerfil_Profissional (idProfissional, crm, crp, uf, area_Formacao, idTipo_Usuario) values (p_idProfissional, p_crm, p_crp, p_uf, p_area_Formacao, p_idTipo_Usuario);
end /
delimiter ;

-- Para finalizar o cadastro em nossa plataforma, deve-se preencher a [tblContato] com os dados do novo usuário

delimiter /
create procedure cadastro_Contato (
in p_idTipo_Usuario int
)

begin
	insert into tblContato (idTipo_Usuario) values (p_idTipo_Usuario);
end /
delimiter ;

-- login

delimiter /
create procedure login_Tipo_Usuario (
in p_email varchar(120)
)

begin
	select idTipo_Usuario, email, nome, senha, date_format(str_to_date(dataNasc, '%Y-%m-%d'), '%d/%m/%Y') as 'Data de nascimento', avatar, tipo_Usuario, date_format(str_to_date(data_Cadastro, '%Y-%m-%d'), '%d/%m/%Y') as 'Data de cadastro da conta' from tblTipo_Usuario where email = p_email and status_Ban = 0;
end /
delimiter ;

-- Exibição dos dados de perfil

-- Caso o campo [tipo_Usuario] seja [1], também serão exibidas as informações do perfil profissional 

delimiter /
create procedure exibir_Dados_Profissional (
in p_idTipo_Usuario int
)

begin
	select crp, crm, uf, area_Formacao from tblPerfil_Profissional where idTipo_Usuario = p_idTipo_Usuario;
end /
delimiter ;

-- Alterações de dados do perfil

delimiter /
create procedure modificar_Avatar (
in p_idTipo_Usuario int,
in p_avatar int
)

begin
	update tblTipo_Usuario set avatar = p_avatar where idTipo_Usuario = p_idTipo_Usuario;
end /
delimiter ;

delimiter /
create procedure modificar_Senha (
in p_idTipo_Usuario int,
in p_senha varchar(120)
)

begin
	update tblTipo_Usuario set senha = p_senha where idTipo_Usuario = p_idTipo_Usuario;
end /
delimiter ;

delimiter /
create procedure modificar_Area_Formacao (
in p_idTipo_Usuario int,
in p_area_Formacao varchar(80)
)

begin
	update tblPerfil_Profissional set area_Formacao = p_area_Formacao where idTipo_Usuario = p_idTipo_Usuario;
end /
delimiter ;









-- Procedures comunidade web

-- tblForum

delimiter /
create procedure criar_Forum (
in p_nome varchar(80),
in p_descricao varchar(500)
)

begin
	insert into tblForum (nome, descricao) values (p_nome, p_descricao);
end /
delimiter ;

/* Importante armazenar o id do fórum clicado na aplicação web. São os valores correspondentes:
   
   Fórum #Desabafos   -> id = 1
   Fórum #Gravidez    -> id = 2
   Fórum #Autocuidado -> id = 3
   Fórum #Maternidade -> id = 4
*/

-- tblPostagem

delimiter /
create procedure criar_Postagem (
in p_titulo varchar(300),
in p_subtitulo varchar(4000),
in p_imagem longtext,
in p_idTipo_Usuario int,
in p_idForum int
)

begin
	insert into tblPostagem (titulo, subtitulo, imagem, data_Postagem, hora, idTipo_Usuario, idForum) values (p_titulo, p_subtitulo, p_imagem, now(), now(), p_idTipo_Usuario, p_idForum);
end /
delimiter ;

delimiter /
create procedure alterar_Postagem (
in p_titulo varchar(300),
in p_subtitulo varchar(4000),
in p_imagem longtext,
in p_idPostagem int
)

begin
	update tblPostagem set titulo = p_titulo, subtitulo = p_subtitulo,  imagem = p_imagem,  hora = now(), data_Postagem = now() where idPostagem = p_idPostagem;
end /
delimiter ;

delimiter /
create procedure excluir_Postagem (
in p_idPostagem int
)

begin
	update tblPostagem set status_Ban = 1 where idPostagem = p_idPostagem;
end /
delimiter ;

-- Diferentes exibições de postagem

delimiter /
create procedure exibir_Postagem_Especifica (
in p_idPostagem int
)

begin
	select a.idForum, a.titulo, a.subtitulo, a.imagem, date_format(str_to_date(a.data_Postagem, '%Y-%m-%d'), '%d/%m/%Y') as 'Data da postagem', date_format(a.hora, '%H:%i') as 'Hora da postagem', a.reacoes,
	       b.avatar, b.nome, b.tipo_Usuario from tblPostagem a
           
	inner join tblTipo_Usuario b on a.idTipo_Usuario = b.idTipo_Usuario where a.idPostagem = p_idPostagem;
end /
delimiter ;

delimiter /
create procedure exibir_Postagem_Popular ()

begin
	select a.idPostagem,a.idForum, a.titulo, a.subtitulo, a.imagem, date_format(str_to_date(a.data_Postagem, '%Y-%m-%d'), '%d/%m/%Y') as 'Data da postagem', date_format(a.hora, '%H:%i') as 'Hora da postagem', a.reacoes,
	       b.avatar, b.nome, b.tipo_Usuario from tblPostagem a
           
	inner join tblTipo_Usuario b on a.idTipo_Usuario = b.idTipo_Usuario where a.status_Ban = 0 and b.status_Ban = 0 
	
	order by data_Postagem, reacoes desc limit 30;
end /
delimiter ;

delimiter /
create procedure exibir_Postagem_Forum (
in p_idForum int
)

begin
	select a.idPostagem, a.titulo, a.subtitulo, a.imagem, date_format(str_to_date(a.data_Postagem, '%Y-%m-%d'), '%d/%m/%Y') as 'Data da postagem', date_format(a.hora, '%H:%i') as 'Hora da postagem', a.reacoes,
	       b.avatar, b.nome, b.tipo_Usuario from tblPostagem a
           
	inner join tblTipo_Usuario b on a.idTipo_Usuario = b.idTipo_Usuario where idForum = p_idForum and a.status_Ban = 0 and b.status_Ban = 0 
	
	order by data_Postagem, hora desc;
end /
delimiter ;

delimiter /
create procedure consulta_Titulo_Postagem (
in p_titulo varchar(300),
in p_idForum int
)

begin
	select a.idPostagem,a.idForum, a.titulo, a.subtitulo, a.imagem, date_format(str_to_date(a.data_Postagem, '%Y-%m-%d'), '%d/%m/%Y') as 'Data da postagem', date_format(a.hora, '%H:%i') as 'Hora da postagem', a.reacoes,
	       b.avatar, b.nome, b.tipo_Usuario from tblPostagem a
           
	inner join tblTipo_Usuario b on a.idTipo_Usuario = b.idTipo_Usuario where titulo like concat('%', p_titulo, '%') and idForum = p_idForum and a.status_Ban = 0 and b.status_Ban = 0
	
	order by titulo;
end /
delimiter ;

-- Menu pessoal do usuário

delimiter /
create procedure exibir_Postagem_Geral ()

begin
	select a.idPostagem, a.idForum, a.titulo, a.subtitulo, date_format(str_to_date(a.data_Postagem, '%Y-%m-%d'), '%d/%m/%Y') as 'Data da postagem', date_format(a.hora, '%H:%i') as 'Hora da postagem', a.reacoes,
	       b.avatar, b.nome, b.tipo_Usuario from tblPostagem a
           
	inner join tblTipo_Usuario b on a.idTipo_Usuario = b.idTipo_Usuario where idForum = p_idForum and a.status_Ban = 0 and b.status_Ban = 0 
	
	order by data_Postagem, hora desc limit 10;
end /
delimiter ;

delimiter /
create procedure exibir_Postagem_Propria (
in p_idTipo_Usuario int
)

begin
	select a.idPostagem, a.idForum, a.titulo, a.subtitulo, date_format(str_to_date(a.data_Postagem, '%Y-%m-%d'), '%d/%m/%Y') as 'Data da postagem', date_format(a.hora, '%H:%i') as 'Hora da postagem', a.reacoes,
	       b.avatar, b.nome, b.tipo_Usuario from tblPostagem a
           
	inner join tblTipo_Usuario b on a.idTipo_Usuario = b.idTipo_Usuario where a.idTipo_Usuario = p_idTipo_Usuario
	
	order by data_Postagem, hora desc limit 5;
end /
delimiter ;

-- Procedure para as informações pessoais

delimiter /
create procedure contagem_Postagem (
in p_idTipo_Usuario int
)

begin
	select count(idPostagem) from tblPostagem where idTipo_Usuario = p_idTipo_Usuario and status_Ban = 0;
end /
delimiter ;

-- Upvote e downvote

delimiter /
create procedure gostei_Postagem (
in p_idPostagem int
)

begin
	update tblPostagem set reacoes = reacoes + 1 where idPostagem = p_idPostagem;
end /
delimiter ;

delimiter /
create procedure desgostei_Postagem (
in p_idPostagem int
)

begin
	update tblPostagem set reacoes = reacoes - 1 where idPostagem = p_idPostagem;
end /
delimiter ;


-- tblResposta_Postagem

delimiter /
create procedure criar_Resposta_Postagem (
in p_mensagem varchar(4000),
in p_idTipo_Usuario int,
in p_idPostagem int
)

begin
	insert into tblResposta_Postagem (mensagem, data_Resposta, hora, idTipo_Usuario, idPostagem) values (p_mensagem, now(), now(), p_idTipo_Usuario, p_idPostagem);
end /
delimiter ;

delimiter /
create procedure exibir_Resposta_Postagem (
in p_idPostagem int
)

begin
	select a.idResposta_Postagem, a.mensagem, date_format(str_to_date(a.data_Resposta, '%Y-%m-%d'), '%d/%m/%Y') as 'Data da resposta', date_format(a.hora, '%H:%i') as 'Hora da resposta', a.reacoes,
	       b.avatar, b.nome, b.tipo_Usuario from tblResposta_Postagem a
           
	inner join tblTipo_Usuario b on a.idTipo_Usuario = b.idTipo_Usuario where idPostagem = p_idPostagem and a.status_Ban = 0 and b.status_Ban = 0 
	
	order by data_Resposta, hora desc;
end /
delimiter ;

-- Upvote e downvote

delimiter /
create procedure gostei_Resposta (
in p_idResposta_Postagem int
)

begin
	update tblResposta_Postagem set reacoes = reacoes + 1 where idResposta_Postagem = p_idResposta_Postagem;
end /
delimiter ;

delimiter /
create procedure desgostei_Resposta (
in p_idResposta_Postagem int
)

begin
	update tblResposta_Postagem set reacoes = reacoes - 1 where idResposta_Postagem = p_idResposta_Postagem;
end /
delimiter ;


-- Procedure de denúncia

delimiter /
create procedure criar_Denuncia (
in p_descricao varchar(2000),
in p_idTipo_Usuario int,
in p_idPostagem int,
in p_idResposta_Postagem int,
in p_idTipo_Denuncia int
)

begin
	insert into tblDenuncia (descricao, data_Denuncia, hora, idTipo_Usuario, idPostagem, idResposta_Postagem, idTipo_Denuncia) values (p_descricao, now(), now(), p_idTipo_Usuario, p_idPostagem, p_idResposta_Postagem, p_idTipo_Denuncia);
end /
delimiter ;


-- Procedures de artigo

-- A exibição dos artigos estará classificada em cinco gêneros:

delimiter /
create procedure exibir_Artigo_Menstruacao ()

begin
	select idArtigo, titulo, resumo, date_format(str_to_date(data_Publicacao, '%Y-%m-%d'), '%d/%m/%Y') as 'Data de publicação por ONNA' from tblArtigo where idGenero = 1
    
	order by data_Publicacao desc;
end /
delimiter ;

delimiter /
create procedure exibir_Artigo_Engravidar ()

begin
	select idArtigo, titulo, resumo, date_format(str_to_date(data_Publicacao, '%Y-%m-%d'), '%d/%m/%Y') as 'Data de publicação por ONNA' from tblArtigo where idGenero = 2
    
	order by data_Publicacao desc;
end /
delimiter ;

delimiter /
create procedure exibir_Artigo_Gestacao ()

begin
	select idArtigo, titulo, resumo, date_format(str_to_date(data_Publicacao, '%Y-%m-%d'), '%d/%m/%Y') as 'Data de publicação por ONNA' from tblArtigo where idGenero = 3
    
	order by data_Publicacao desc;
end /
delimiter ;

delimiter /
create procedure exibir_Artigo_Maternidade ()

begin
	select idArtigo, titulo, resumo, date_format(str_to_date(data_Publicacao, '%Y-%m-%d'), '%d/%m/%Y') as 'Data de publicação por ONNA' from tblArtigo where idGenero = 4
    
	order by data_Publicacao desc;
end /
delimiter ;

delimiter /
create procedure exibir_Artigo_Cuidados_Corpo ()

begin
	select idArtigo, titulo, resumo, date_format(str_to_date(data_Publicacao, '%Y-%m-%d'), '%d/%m/%Y') as 'Data de publicação' from tblArtigo where idGenero = 5
    
	order by data_Publicacao desc;
end /
delimiter ;

/*
delimiter /
create procedure consulta_Titulo_Artigo (
in p_titulo varchar(255)
)

begin
	select idArtigo, titulo, resumo, date_format(str_to_date(data_Publicacao, '%Y-%m-%d'), '%d/%m/%Y') as 'Data de publicação', idGenero from tblArtigo where titulo like concat('%', p_titulo, '%');
end /
delimiter ;


delimiter /
create procedure consulta_Artigo_Selecionado (
in p_idArtigo int
)

begin
	select idArtigo, titulo, resumo, fonte, date_format(str_to_date(data_Publicacao, '%Y-%m-%d'), '%d/%m/%Y') as 'Data de publicação', idAdmin, idGenero from tblArtigo where idArtigo = p_idArtigo;
end /
delimiter ;
*/








-- Procedures de chat privado

-- As próximas duas procedures devem ser executadas em sequência caso a usuária deseja conversar com um profissioanal

-- Salvar o contato do profissional na própria agenda

delimiter /
create procedure salvar_Contato_1 (
in p_idTipo_Usuario int,
in p_idContato int
)

begin
	insert into tblColecao_Contato (idTipo_Usuario, idContato) values (p_idTipo_Usuario, p_idContato);
end /
delimiter ; 

-- Salvar o próprio contato na agenda do profissional contatado

delimiter /
create procedure salvar_Contato_2 (
in p_idTipo_Usuario int,
in p_idContato int
)

begin
	insert into tblColecao_Contato (idTipo_Usuario, idContato) values (p_idContato, p_idTipo_Usuario);
end /
delimiter ; 

-- As próximas duas procedures devem ser executadas em sequência caso o usuário deseja remover um contato

-- Excluir um contato da própria lista de contatos

delimiter /
create procedure excluir_Contato_1 (
in p_idTipo_Usuario int,
in p_idContato int
)

begin
	delete from tblColecao_Contato where idTipo_Usuario = p_idTipo_Usuario and idContato = p_idContato;
end /
delimiter ; 

-- Excluir o próprio contato da lista do contato excluido

delimiter /
create procedure excluir_Contato_2 (
in p_idTipo_Usuario int,
in p_idContato int
)

begin
	delete from tblColecao_Contato where idTipo_Usuario = p_idContato and idContato = p_idTipo_Usuario;
end /
delimiter ; 


-- tblContato

delimiter /
create procedure exibir_Lista_Contatos (
in p_idTipo_Usuario int
)

begin
	select a.idContato,
	       b.avatar, b.nome,
		   c.area_Formacao from tblColecao_Contato a

           inner join tblContato d on a.idContato = d.idContato
           inner join tblTipo_Usuario b on d.idTipo_Usuario = b.idTipo_Usuario 
           left join tblPerfil_Profissional c on b.idTipo_Usuario = c.idTipo_Usuario where a.idTipo_Usuario = p_idTipo_Usuario and b.status_Ban = 0
           
           order by b.nome;
end /
delimiter ; 


-- tblConversa_Privada

delimiter /
create procedure enviar_Mensagem (
in p_mensagem varchar(4000),
in p_idTipo_Usuario int,
in p_idContato int
)

begin
	insert into tblConversa_Privada (mensagem, data_Mensagem, hora, idTipo_Usuario, idContato) values (p_mensagem, now(), now(), p_idTipo_Usuario, p_idContato);
end /
delimiter ; 

delimiter /
create procedure exibir_Mensagens (
in p_idTipo_Usuario int,
in p_idContato int
)

begin
	select mensagem, data_Mensagem, date_format(hora, '%H:%i') as 'Hora da mensagem' from tblConversa_Privada where idTipo_Usuario = p_idTipo_Usuario and idContato = p_idContato

    union all

    select mensagem, data_Mensagem, date_format(hora, '%H:%i') as 'Hora da mensagem' from tblConversa_Privada where idTipo_Usuario = p_idContato and idContato = p_idTipo_Usuario
    
    order by data_Mensagem, hora;
end /
delimiter ; 









-- Mobile do profissional

delimiter /
create procedure criar_Disponibilidade (
in p_idProfissional int,
in p_data_Disponibilidade date,
in p_hora_Inicial time,
in p_hora_Final time
)

begin
	insert into tblDisponibilidade (idProfissional, data_Disponibilidade, hora_Inicial, hora_Final) values (p_idProfissional, p_data_Disponibilidade, p_hora_Inicial, p_hora_Final);
end /
delimiter ; 

delimiter /
create procedure exibir_Disponibilidade (
in p_idProfissional int
)

begin
	select idDisponibilidade, data_Disponibilidade, hora_Inicial, hora_Final from tblDisponibilidade where idProfissional = p_idProfissional and data_Disponibilidade >= now();
end /
delimiter ;

delimiter /
create procedure alterar_Disponibilidade (
in p_idDisponibilidade int,
in p_hora_Inicial time,
in p_hora_Final time
)

begin
	update tblDisponibilidade set hora_Inicial = p_hora_Inicial, hora_Final = p_hora_Final where idDisponibilidade = p_idDisponibilidade;
end /
delimiter ; 

delimiter /
create procedure excluir_Disponibilidade (
in p_idDisponibilidade int
)

begin
	delete from tblDisponibilidade where idProfissional = p_idProfissional and idDisponibilidade = p_idDisponibilidade;
end /
delimiter ; 









-- Mobile da usuária comum

-- Função de assistência voluntária

delimiter /
create procedure procurar_Profissional_Fisiologico ()

begin
	select a.idProfissional from tblPerfil_Profissional a
    
    inner join tblDisponibilidade b on a.idProfissional = b.idProfissional where a.crm != null and now() >= hora_Inicial and now() < hora_Final and now() = data_Disponibilidade
    
    order by rand() limit 1;
end /
delimiter ; 

delimiter /
create procedure procurar_Profissional_Psicologico ()

begin
	select a.idProfissional from tblPerfil_Profissional a
    
    inner join tblDisponibilidade b on a.idProfissional = b.idProfissional where a.crp != null and now() >= hora_Inicial and now() < hora_Final and now() = data_Disponibilidade
    
    order by rand() limit 1;
end /
delimiter ; 


-- Funções das notificações

delimiter /
create procedure criar_Notificacao (
in p_titulo varchar(50),
in p_mensagem varchar(255),
in p_data_Notificacao date,
in p_hora time,
in p_idUsuario int
)

begin
	insert into tblNotificacao (titulo, mensagem, data_Notificacao, hora, idUsuario) values (p_titulo, p_mensagem, p_data_Notificacao, p_hora, p_idUsuario);
end /
delimiter ; 

delimiter /
create procedure exibir_Lista_Notificacoes (
in p_idUsuario int
)

begin
	select idNotificacao, titulo, mensagem, date_format(str_to_date(data_Notificacao, '%Y-%m-%d'), '%d/%m/%Y') as 'Data da notificação', date_format(hora, '%H:%i') as 'Hora da notificação' from tblNotificacao where idUsuario = p_idUsuario
    
    order by data_Notificacao, hora;
end /
delimiter ; 

delimiter /
create procedure excluir_Notificacao (
in p_idNotificacao int
)

begin
	delete from tblNotificacao where idNotificacao = p_idNotificacao;
end /
delimiter ; 


-- Funções do calendário menstrual

delimiter /
create procedure cadastrar_Calendario (
in p_dia_Marcado date,
in p_idUsuario int
)

begin
	insert into tblCalendario_Personalizado (dia_Marcado, idUsuario) values (p_dia_Marcado, p_idUsuario);
end /
delimiter ; 

delimiter /
create procedure alterar_Calendario (
in p_dia_Marcado date,
in p_periodo int, 
in p_idUsuario int
)

begin
	update tblCalendario_Personalizado set dia_Marcado = p_dia_Marcado, periodo = p_periodo where idUsuario = p_idUsuario;
end /
delimiter ;

delimiter /
create procedure definir_Intervalo_Calendario (
in p_idUsuario int
)

begin
	select periodo, dia_marcado as 'Data de início do fluxo menstrual', date_add(dia_Marcado, interval periodo day) as 'Data de término do fluxo menstrual' from tblCalendario_Personalizado where idUsuario = p_idUsuario;
end /
delimiter ;


-- Funções do relatório de humor

delimiter /
create procedure criar_Relatorio_Humor (
in p_idUsuario int,
in p_humor tinyint,
in p_sintoma tinyint,
in p_secrecao_Vaginal tinyint
)

begin
	insert into tblRelatorio_Humor (humor, sintoma, secrecao_Vaginal, data_Relatorio, idUsuario) values (p_humor, p_sintoma, p_secrecao_Vaginal, now(), p_idUsuario);
end /
delimiter ; 

delimiter /
create procedure criar_Relatorio_Remedio (
in p_idUsuario int,
in p_remedio tinyint,
in p_intervalo_Hora tinyint,
in p_qntd_Agua tinyint
)

begin
	insert into tblRelatorio_Remedio (remedio, intervalo_Hora, qntd_Agua, data_Relatorio, idUsuario) values (p_remedio, p_intervalo_Hora, p_qntd_Agua, now(), p_idUsuario);
end /
delimiter ; 

delimiter /
create procedure criar_Relatorio_Atividade (
in p_idUsuario int,
in p_atividade_Fisica tinyint,
in p_atividade_Feita tinyint,
in p_apos_Atividade tinyint
)

begin
	insert into tblRelatorio_Atividade (atividade_Fisica, atividade_Feita, apos_Atividade, data_Relatorio, idUsuario) values (p_atividade_Fisica, p_atividade_Feita, p_apos_Atividade, now(), p_idUsuario);
end /
delimiter ; 

delimiter /
create procedure exibir_Relatorio_Humor (
in p_idUsuario int,
in p_data_Relatorio date
)

begin
	select humor, sintoma, secrecao_Vaginal from tblRelatorio_Humor where idUsuario = p_idUsuario and data_Relatorio = p_data_Relatorio;
end /
delimiter ; 

delimiter /
create procedure exibir_Relatorio_Remedio (
in p_idUsuario int,
in p_data_Relatorio date
)

begin
	select remedio, intervalo_Hora, qntd_Agua from tblRelatorio_Remedio where idUsuario = p_idUsuario and data_Relatorio = p_data_Relatorio;
end /
delimiter ;

delimiter /
create procedure exibir_Relatorio_Atividade (
in p_idUsuario int,
in p_data_Relatorio date
)

begin
	select atividade_Fisica, atividade_Feita, apos_Atividade from tblRelatorio_Atividade where idUsuario = p_idUsuario and data_Relatorio = p_data_Relatorio;
end /
delimiter ;









-- Inserts para todas as tableas a seguir

-- Dados gerais de cadastro dos usuários

insert into tblTipo_Usuario (status_Ban, email, senha, nome, dataNasc, avatar, tipo_Usuario, data_Cadastro) values
(0, 'Joana@gmail.com', 'S!@nm123543', 'Joana Silva', '1990-05-15', 1, 0, '2024-10-05'),
(0, 'Clara@gmail.com', 'C!@nm123543', 'Clara Maria', '1990-10-15', 1, 0, '2022-10-05'),
(0, 'Fabiana@gmail.com', 'F!@nm123543', 'Fabiana Lima', '1992-10-15', 2, 0, '2021-08-05'),
(0, 'Gabriela@gmail.com', 'G!@nm123543', 'Gabriela Roberta', '1980-10-15', 2, 0, '2022-07-05'),
(0, 'Maria@gmail.com', 'M!@nm123543', 'Maria Julia', '1975-10-15', 3, 0, '2023-06-05'),

(0, 'Yasmim@gmail.com', 'C!@nm123543', 'Yasmim Gabriela', '1998-10-15', 3, 1, '2021-05-05'),
(0, 'Tabata@gmail.com', 'C!@nm123543', 'Tabata Koff', '1997-10-15', 4, 1, '2020-04-05'),
(0, 'Sergio@gmail.com', 'C!@nm123543', 'Sergio Théo', '1996-10-15', 4, 1, '2020-03-05'),
(0, 'hugo@gmail.com', 'C!@nm123543', 'Hugo Mavi', '1995-10-15', 5, 1, '2024-02-05'),
(0, 'lucas@gmail.com', 'C!@nm123543', 'Lucas Luh', '1994-10-15', 5, 1, '2022-01-05');

insert into tblContato (idTipo_Usuario) values
(1),
(2),
(3),
(4),
(5),
(6),
(7),
(8),
(9),
(10);

insert into tblColecao_Contato (idTipo_Usuario, idContato) values
(1, 6),
(1, 7),
(1, 8),
(6, 1),
(7, 1),
(8, 1),

(2, 8),
(2, 10),
(8, 2),
(10, 2);



-- Dados do perfil pessoal

insert into tblPerfil_Pessoal (idUsuario, idTipo_Usuario) values
(1, 1),
(2, 2),
(3, 3),
(4, 4),
(5, 5);

insert into tblCalendario_Personalizado (dia_Marcado, periodo, idUsuario) values
('2024-11-06', 7, 1),
('2024-11-07', 4, 2),
('2024-11-08', 7, 3),
('2024-11-09', 7, 4),
('2024-11-12', 9, 5);

insert into tblRelatorio_Humor (humor, sintoma, secrecao_Vaginal, data_Relatorio, idUsuario) values
(5, 2, 3, '2024-11-06', 1),
(3, 4, 2, '2024-11-07', 1),

(2, 1, 1, '2024-11-05', 2),

(1, 5, 5, '2024-11-08', 3),

(4, 3, 3, '2024-11-07', 4),

(3, 2, 4, '2024-11-11', 5);


insert into tblRelatorio_Remedio (remedio, intervalo_Hora, qntd_Agua, data_Relatorio, idUsuario) values
(5, 2, 3, '2024-11-06', 1),
(3, 4, 2, '2024-11-07', 1),

(2, 1, 1, '2024-11-05', 2),

(1, 5, 5, '2024-11-08', 3),

(4, 3, 3, '2024-11-07', 4),

(3, 2, 4, '2024-11-11', 5);


insert into tblRelatorio_Atividade (atividade_Fisica, atividade_Feita, apos_Atividade, data_Relatorio, idUsuario) values
(5, 2, 3, '2024-11-06', 1),
(3, 4, 2, '2024-11-07', 1),

(2, 1, 1, '2024-11-05', 2),

(1, 5, 5, '2024-11-08', 3),

(4, 3, 3, '2024-11-07', 4),

(3, 2, 4, '2024-11-11', 5);



-- Dados do perfil profissional

insert into tblPerfil_Profissional (idProfissional, crm, crp, uf, area_Formacao, idTipo_Usuario) values
(6, 20021, 00000, 'SP', 'Cardiologia', 6),
(7, 20022, 00000, 'SP', 'Infectologia',  7),
(8, 20023, 00000, 'RO', 'Nutrologia',  8),
(9, 00000, 20024, 'RR', 'Psicologia Hospitalar',  9),
(10, 00000, 20024, 'PA', 'Psicologia em Saúde',  10);

insert into tblDisponibilidade (data_Disponibilidade, hora_Inicial, hora_Final, idProfissional) values
('2024-11-01', '11:00:00', '12:30:00', 6),
('2024-11-01', '14:30:00', '15:30:00', 6),
('2024-12-03', '14:30:00', '15:30:00', 6),
('2025-01-01', '12:00:00', '14:00:00', 7),
('2025-01-02', '12:00:00', '16:00:00', 7);



-- Dados conversas privadas

insert into tblConversa_Privada (mensagem, data_Mensagem, hora, idTipo_Usuario, idContato) values
('Olá! Bom dia! Pode me ajudar com uma questão?', '2024-11-02', '12:03:00', 1, 6),
('Claro! ficarei feliz em ajudá-la!', '2024-11-02', '12:05:00', 6, 1),
('Como lido com arritmia cardíaca?', '2024-11-02', '12:07:00', 1, 6),
('As arritmias podem ser evitadas e controladas com algumas medidas preventivas como reduzir o estresse, ter uma alimentação balanceada, rica em legumes, frutas e verduras, não exagerar no consumo de bebidas alcoólicas e de energéticos, não fumar e praticar atividades físicas regularmente', '2024-11-02', '12:13:00', 6, 1),
('Muito obrigada!', '2024-11-02', '12:22:00', 1, 6),

('Olá, doutora Tabata! Posso ir ao seu consultório amanhã?', '2024-11-03', '17:03:00', 1, 7),
('Claro que sim! Amanhã tenho horário às 11h, pode ser?', '2024-11-03', '17:11:00', 7, 1),
('Maravilha! Pode ser!', '2024-11-03', '17:23:49', 1, 7),

('Doutor, minha compulsão alimentar está piorando... O que posso fazer?', '2024-11-04', '19:03:00', 1, 8),
('Oi, Joana! O apoio psicológico é fundamental para tratar a compulsão alimentar! Não é minha área, mas posso te indicar uma conhecida minha se quiser.', '2024-11-04', '19:13:00', 8, 1),
('Ajudaria muito!', '2024-11-04', '19:15:00', 1, 8),

('Boa noite! Espero não estar incomodando!', '2024-11-05', '19:03:00', 2, 8),
('Imagina! Em que posso ajudar?', '2024-11-05', '20:13:00', 8, 2),
('Existe comida antiestresse? Preciso muito saber!', '2024-11-05', '20:15:00', 2, 8),
('Existe sim! São exemplos aveia, batatas, aipim, inhame, frutas, pães integrais, arroz integral. Manter uma dieta com carboidratos de qualidade ajuda a reduzir os níveis do cortisol, que é um hormônio liberado em situações de estresse e jejum prolongado, por exemplo.', '2024-11-05', '20:23:00', 8, 2),

('Boa tarde! O que seria Psicologia em Saúde?', '2024-11-06', '12:03:00', 2, 10),
('Boa tarde! A Psicologia da Saúde é a área da Psicologia que estuda o comportamento humano no contexto da saúde e da doença, buscando compreender o papel das variáveis psicológicas sobre a manutenção da saúde, o desenvolvimento de doenças e comportamentos associados à doença. Essa é uma área maravilhosa!', '2024-11-06', '12:13:00', 10, 2);



-- Dados comunidade web

insert into tblPostagem (status_Ban, titulo, subtitulo, data_Postagem, hora, reacoes, idTipo_Usuario, idForum) values
(0, 'Quanto tempo, em média, se leva para engravidar?', 'Oi, Gente! Estive paranóica com isso! Alguém consegue esclarecer isso para mim?', '2024-11-02', '12:03:00', 25, 1, 2),
(0, 'Quanto tempo dura a gestação?', 'Ouvi diferentes informações de muitas pessoas da internet, não sei em quem acreditar!', '2024-11-02', '12:05:00', 15, 1, 2),
(0, 'Quais são os sintomas da menstruação?', 'Tive dores de cabeça constantes, isso tem relação com a minha menstruação?', '2024-11-03', '22:11:00', 9, 1, 3),
(0, 'Em geral, quantos quilos as gestantes ganham?', 'Isso me preocupa demais!', '2024-11-03', '22:30:00', 39, 1, 3),
(0, 'Quais alimentos são recomendados e quais devem ser evitados?', '', '2024-11-03', '23:14:00', 14, 1, 3),

(0, 'Tem algo que eu não posso fazer quando estou menstruada?', '', '2024-11-04', '09:14:00', 5, 3, 3),
(0, 'Como ter uma boa noite de sono?', '', '2024-11-04', '10:22:00', 7, 3, 3),
(0, 'Sou idiota por querer um filho?', 'Eu só sinto que sou tão idiota por querer um filho e que vou arruinar minha vida se tiver um e por que diabos eu faria isso quando é tão fácil não ter um. Mas ao mesmo tempo, eu quero ter um filho. Eu não sei, acho que estou apenas desabafando minha ansiedade/sentimentos. Obrigado por ler.', '2024-11-04', '10:34:00', 9, 3, 1),
(0, 'Quais exames de rotina devo fazer?', '', '2024-11-04', '11:05:00', 8, 3, 3),

(0, 'Existem remédios contraindicados para grávidas?', '', '2024-11-05', '07:14:40', 10, 4, 2),
(0, 'Qual é a quantidade de sangue que se perde normalmente na menstruação?', 'Existe um número certo?', '2024-11-05', '08:14:00', 20, 4, 3),
(0, 'Quanto tempo demora para menstruação ficar regular na adolescência?', 'Estou preocupada com minha filha!', '2024-11-05', '08:17:22', 9, 4, 3),

(0, 'É possível atrasar a menstruação de forma proposital?', '', '2024-11-06', '10:14:00', 29, 5, 3),
(0, 'Tomar anticoncepcionais de forma contínua, para não menstruar, faz mal?', '', '2024-11-06', '13:19:00', 12, 5, 3),
(0, 'Qual a posição ideal para as gestantes dormirem?', 'Me sinto tão desconfortável durante a noite! Alguém para ajudar??!', '2024-11-06', '17:50:00', 7, 5, 2),

(0, 'Tirem essa rede social do ar!', '', '2024-11-09', '17:50:00', 1, 9, 1),
(0, 'Vocês são chatooooooooos!', '', '2024-11-09', '17:55:00', 1, 9, 1),
(0, 'Sério, vão arrumar o que fazer. Todo mundo é muito dramático aqui!', '', '2024-11-09', '17:58:00', 1, 9, 1);

insert into tblResposta_Postagem (status_Ban, mensagem, data_Resposta, hora, reacoes, idTipo_Usuario, idPostagem) values
(0, 'Ainda que o período de seis meses seja mais comum, é normal esperar até 12 meses. Se o casal que mantém vida sexual ativa sem uso de contraceptivo não conseguir engravidar dentro de 1 ano, o recomendado é que busque ajuda médica.', '2024-11-07', '13:14:00', 4, 6, 1),

(0, 'Segundo estatísticas, normalmente espera-se que 80% a 85% dos casais consigam engravidar espontaneamente num período de 6 a 12 meses.', '2024-11-07', '14:14:00', 4, 7, 1),
(0, 'É esperado que uma gravidez dure 40 semanas — e é normal haver variações entre 37 e 42 semanas.', '2024-11-07', '14:18:00', 3, 7, 2),
(0, 'Ter dor de cabeça é sim normal! Também se tem os sintomas emocionais: irritabilidade, ansiedade, insônia ou sonolência, dificuldade de concentração, fome exagerada ou falta de apetite e depressão.', '2024-11-07', '14:29:00', 6, 7, 3),
(0, 'Para quem tem IMC abaixo de 18, o esperado é ganhar entre 12 e 18 kg. No caso das mulheres com IMC entre 19 e 25, o ganho de peso deve ser de 11 a 16 kg. Já para as que têm IMC acima de 26, a expectativa é que não se ultrapasse 11 kg.', '2024-11-07', '14:39:00', 4, 7, 4),

(0, 'A menstruação não impede que você faça nada do que já está acostumada a fazer. Você pode ir à escola, ajudar em casa, sair com os amigos, praticar esportes e fazer tudo o que faria normalmente.', '2024-11-08', '08:14:00', 2, 8, 6),
(0, 'Essa é uma pergunta que ninguém pode responder por você, a não ser você mesma. A decisão de trazer outro ser humano para este mundo não é fácil, você não pode fazer isso sobre o que você quer, mas você tem que olhar para isso com a mentalidade de "o que é melhor para meu filho.', '2024-11-08', '14:14:00', 5, 8, 8),

(0, 'Acho que a terapia cognitivo-comportamental vai te ajudar muito. Você tem crenças distorcidas arruinando sua vida, essencialmente, é exatamente nisso que a TCC deve ajudar.', '2024-11-10', '14:14:00', 6, 10, 8),
(0, 'Há medicações que conseguem ultrapassar a barreira placentária e fazer mal para o feto. Por isso, remédios devem ser tomados conforme orientação do obstetra.', '2024-11-10', '14:14:00', 5, 10, 11),

(0, 'Se manca! Banam essa pessoa urgentemente!', '2024-11-11', '14:14:00', 9, 1, 18),
(0, 'Vai cuidar da SUA vida ao invés de encher o saco!', '2024-11-11', '14:15:00', 13, 2, 18),
(0, 'Concordo contigo! Essas pessoas não sabem o que é sofrer de verdade! São todos mentes fracas!', '2024-11-11', '15:08:00', 9, 2, 18);

insert into tblDenuncia (status_Check, descricao, data_Denuncia, hora, idTipo_Usuario, idPostagem, idTipo_Denuncia) values
(0, 'Olha essa palhaçada!', '2024-11-11', '14:17:00', 1, 18, 1),
(0, 'Isso não deveria estar aqui!', '2024-11-11', '14:20:00', 2, 18, 1);

insert into tblDenuncia (status_Check, descricao, data_Denuncia, hora, idTipo_Usuario, idResposta_Postagem, idTipo_Denuncia) values
(0, 'Não podemos ter uma pessoa que fala essas atrocidades no ONNA!', '2024-11-11', '14:24:00', 2, 12, 1);
